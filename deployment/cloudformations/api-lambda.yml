AWSTemplateFormatVersion: 2010-09-09
Parameters:
  Environment:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /webpresence/environment
    Description: SSM parameter name for environment
  ApiLambdaKey:
    Type: String
    MinLength: 1
    Description: The key for the zipped lambda in the s3 bucket
Resources:
  iamForLambda:
    Type: AWS::IAM::Role
    Properties:
      RoleName: iamForLambda
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "s3-read-only"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                Resource: "arn:aws:s3:::geolocator-${Environment}/*"
  apiLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "geolocatorLambda-cf"
      Runtime: python3.7
      Handler: index.handler
      Role: !GetAtt iamForLambda.Arn
      Code:
        S3Bucket: !Sub "geolocator-${Environment}-cf-2"
        S3Key: !Sub ${ApiLambdaKey}
Outputs:
  apiLambdaFunctionArn:
    Value: !Sub "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${apiLambdaFunction.Arn}/invocations"
    # Value: !GetAtt apiLambdaFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}apiLambdaFunctionArn"
